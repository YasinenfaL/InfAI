"""
data_utils.py: This module contains utility functions for analyzing data,
performing trend analysis, and interacting with data using a language model.
"""

import warnings
import pandas as pd
from langchain_experimental.agents.agent_toolkits.pandas.base import create_pandas_dataframe_agent
from langchain.schema import SystemMessage

warnings.filterwarnings("ignore", category=UserWarning)

system_message = SystemMessage(
    content=(
        "Deneyimli bir veri analisti olarak, sunulan "
        "veriyi analiz et ve kullanıcının sorularına net ve kesin yanıtlar ver. "
        "Gereksiz adımlardan kaçın ve doğrudan sonuca odaklan. Türkçe cevaplamanı istiyorum."
    )
)


def summarize_csv_with_model(df, llm):
    """
    Generates a summary of the given DataFrame using the provided language model.

    Args:
        df (pd.DataFrame): The input DataFrame to be summarized.
        llm: The language model for generating natural language responses.

    Returns:
        dict: A dictionary containing various summary information about the DataFrame.
    """
    # Convert date columns to datetime format
    date_columns = [col for col in df.columns if 'date' in col.lower() or 'tarih' in col.lower()]
    for col in date_columns:
        df[col] = pd.to_datetime(df[col], errors='coerce')

    pandas_agent = create_pandas_dataframe_agent(
        llm,
        df,
        verbose=False,
        allow_dangerous_code=True,
        agent_kwargs={
            'system_message': system_message,
            'handle_parsing_errors': True,
            'max_iterations': 150,
            'max_execution_time': 300
        }
    )

    data_summary = {
        "initial_data_sample": df.head(),
        "column_descriptions": pandas_agent.run(
            "Veri setindeki her sütunun adını ve kısa bir açıklamasını listeleyin. "
            "Türkçe cevaplamanı istiyorum."
        ),
        "missing_values": pandas_agent.run(
            "Veri setindeki eksik değerlerin toplam sayısını hesaplayın ve "
            "'Bu veri setinde X eksik değer var.' şeklinde yanıt verin. "
            "Türkçe cevaplamanı istiyorum."
        ),
        "duplicate_values": pandas_agent.run(
            "Bu veri setinde toplam kaç yinelenen satır var? 'Bu veri setinde X "
            "yinelenen satır var.' şeklinde yanıt ver. Türkçe cevaplamanı istiyorum."
        ),
        "anomaly_values": pandas_agent.run(
            "Bu veri setinde anormal değerler var mı? Varsa, hangi sütunlarda ve nasıl "
            "tespit edilebilir? Türkçe cevaplamanı istiyorum."
        ),
        "essential_metrics": df.describe(),
        "data_types": df.dtypes,
        "data_shape": df.shape
    }

    return data_summary


def analyze_trend(df, llm, variable_of_interest):
    """
    Analyzes the correlation between the specified variable and other numeric
    variables in the DataFrame.

    Args:
        df (pd.DataFrame): The input DataFrame for analysis.
        llm: The language model for generating responses.
        variable_of_interest (str): The variable for correlation analysis.

    Returns:
        str: A summary of the correlation analysis in Turkish.
    """
    pandas_agent = create_pandas_dataframe_agent(
        llm,
        df,
        verbose=False,
        allow_dangerous_code=True,
        agent_kwargs={
            'system_message': system_message,
            'handle_parsing_errors': True,
            'max_iterations': 150,
            'max_execution_time': 300
        }
    )

    trend_response = pandas_agent.run(
        f"Lütfen '{variable_of_interest}' değişkeni ile diğer sayısal değişkenler arasındaki "
        "korelasyonu analiz edin ve sonuçları Türkçe cevaplamanı istiyorum."
    )

    return trend_response


def ask_question(df, llm, question):
    """
    Answers the given question based on the content of the DataFrame.

    Args:
        df (pd.DataFrame): The input DataFrame for answering questions.
        llm: The language model for generating responses.
        question (str): The question to be answered.

    Returns:
        str: The answer generated by the language model in Turkish.
    """
    pandas_agent = create_pandas_dataframe_agent(
        llm,
        df,
        verbose=False,
        allow_dangerous_code=True,
        agent_kwargs={
            'system_message': system_message,
            'handle_parsing_errors': True,
            'max_iterations': 150,
            'max_execution_time': 300
        }
    )

    ai_response = pandas_agent.run(
        f"{question} Cevabınızı net ve doğrudan verin. Türkçe cevaplamanı istiyorum."
    )

    return ai_response
